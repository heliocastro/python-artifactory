name: Check code

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10'
  POETRY_VERSION: '1.6.1'


jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install Poetry and dependencies
      run: |
        pip install poetry==$POETRY_VERSION
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.create false
        poetry lock
        poetry install --no-interaction

    - name: Lint with pre-commit
      run: |
        poetry run pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Europe/Berlin"

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Poetry and dependencies
        run: |
          pip install poetry==$POETRY_VERSION
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.create false
          poetry lock
          poetry install --no-interaction

      - name: Run pytest
        uses: pavelzw/pytest-action@v2
        with:
          emoji: true
          verbose: false
          job-summary: true
          report-title: 'PyArtifactory Test Report'
          click-to-expand: true
          custom-arguments: '--cov=pyartifactory --cov-report=xml'

      - name: Coveralls
        uses: coverallsapp/github-action@v2
